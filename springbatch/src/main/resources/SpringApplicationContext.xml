<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
	xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    					http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
   						http://www.springframework.org/schema/context
    					http://www.springframework.org/schema/context/spring-context-4.3.xsd 
    					http://www.springframework.org/schema/jdbc 
    					http://www.springframework.org/schema/jdbc/spring-jdbc.xsd 
    					http://www.springframework.org/schema/batch 
    					http://www.springframework.org/schema/batch/spring-batch.xsd">

	<context:property-placeholder location="Application.properties" />
	<context:annotation-config />
	<context:component-scan base-package="com.spring.batch.core" />

	<!-- connect to database -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${app.mysql.driverClassName}" />
		<property name="url" value="${app.mysql.url}" />
		<property name="username" value="${app.mysql.user.name}" />
		<property name="password" value="${app.mysql.user.pwd}" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<!-- create job-meta tables automatically -->
	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="org/springframework/batch/core/schema-drop-mysql.sql" />
		<jdbc:script location="org/springframework/batch/core/schema-mysql.sql" />
	</jdbc:initialize-database>

	<!-- stored job-meta in database -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseType" value="mysql" />
	</bean>

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<bean id="csvFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:file/input/employee.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="${app.csv.head.name}" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.spring.batch.core.mapper.EmployeeFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>com.spring.batch.core.bean.Employee</value>
            </list>
        </property>
    </bean>
    
    <bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
        <property name="resource" value="file:src/main/resources/file/output/employee.xml"/>
        <property name="marshaller" ref="reportMarshaller"/>
        <property name="rootTagName" value="employees"/>
    </bean>
    
    <batch:job id="employeeJob">
        <batch:step id="step1">
            <batch:tasklet>
                <batch:chunk reader="csvFileItemReader"
                             writer="xmlItemWriter"
                             processor="itemProcessor"
                             commit-interval="10">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>
</beans>